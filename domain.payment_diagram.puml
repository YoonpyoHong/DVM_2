@startuml
class domain.payment.PaymentManager {
+ boolean payment(CardManager,int,String)
+ void cancelPayment(CardManager,int,String)
}
class domain.payment.Order {
- Item item
- int quantity
+ Item getItem()
+ int getQuantity()
}
class domain.payment.Verification {
- int itemId
- int itemQuantity
- String verificationCode
- boolean verificationValidity
+ boolean getVerificationValidity()
+ int getItemId()
+ int getItemQuantity()
+ String getVerificationCode()
+ String toString()
}
class domain.payment.CardManager {
- {static} Map<String,Card> cards
+ boolean checkCardValidity(String,int)
+ Card getCardInfo(String)
+ String encodeCardNum(String)
- void loadCardList()
}
class domain.payment.Card {
+ {static} int CARD_NUM_LENGTH
- String cardNum
- int cardPwd
- int money
+ int getCardPwd()
+ int getMoney()
+ void setMoney(int)
+ String toString()
}
class domain.payment.VerificationManager {
+ {static} int CODE_LENGTH
- {static} int LETTER
- {static} String LETTER_SET
- {static} Random rand
- {static} Map<String,Verification> verifications
- void loadTestVerification()
+ String createVerificationCode()
+ void saveVerification(int,int,String,boolean)
+ Verification checkVerification(String)
- boolean isValidCode(String)
+ void removeVerification(String)
}
@enduml